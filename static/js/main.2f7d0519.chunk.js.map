{"version":3,"sources":["App.js","Reducer1.js","Reducer2.js","Reducer3.js","Reducer4.js","reportWebVitals.js","Practice.js","Memos.js","Classcomp.js","index.js"],"names":["App","useState","show","setShow","count","setCount","useReducer","state","action","type","counter","Error","dispatch","countRef","useRef","inputRef","console","log","useEffect","document","title","current","focus","href","onClick","ref","name","Reducer1","handleTextChange","e","field","target","payload","value","username","email","password","onChange","Reducer2","setCounter","showdata","setShowdata","Reducer3","Reducer4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Practice","DisplayName","React","memo","factorial","n","i","Memos","result","useMemo","setName","placeholder","Classcomp","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f7d0519.chunk.js","sourcesContent":["import React from 'react';\nimport { useState,useEffect,useRef,useReducer} from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const[show,setShow] =useState(0);\n  const[count,setCount] =useState(0);\n\n  const initialFormState={counter:0};\n  const reducer=(state,action)=>{\n    switch(action.type)\n    {\n      case 'increment':\n      return{\n    counter: state.counter + 1       \n      }\n      case 'decrement':\n      return {\n        counter:state.counter - 1\n      }\n      default:\n        throw new Error();\n    }\n  }\n  const [state,dispatch] = useReducer(reducer,initialFormState);\n\n  const countRef = useRef(0);\n  const inputRef =useRef();\n\n  const showHandler=()=>{\n  setShow(!show);\n}\nconst handleRef=()=>{\n  // setCountbut(countbut + 1);\n  // console.log(`you clicked ${countbut} times`);\n  countRef.current++;\n  console.log(`clicked ${countRef.current} times`);\n}\nconsole.log(\"I rendered\");\nconst effectHandler=()=>{\n  setCount(count +1)\n}\nuseEffect(()=>{\n  //update document title using browser api\n  document.title=`You clicked ${count} times`\n})\nuseEffect(()=>{\n  inputRef.current.focus();\n},[])\nconst inputFun =()=>{\n\n}\n  return(\n    <div>\n      <hr></hr>\n      <p>App Component</p>\n        <a href=\"##\" onClick={showHandler}>Want tttto buy new Car</a>\n        {show && <p >Call us- 456 666 777</p>}\n        <button onClick={effectHandler}>Click for effect</button><br/>\n        <button onClick={handleRef}>Click me ref</button>\n        <input ref={inputRef} type=\"text\" name=\"username\" onClick={inputFun}/>\n        <br/>\n\n      \n        \n        {state.counter}\n        <button onClick={()=>dispatch({type:'increment'})}>Increment</button>\n        <button onClick={()=>dispatch({type:'decrement'})}>Decrement</button>\n      </div>\n     \n     ); \n\n} \n  export default App;\n\n \n","//import react from 'react';\nimport { useReducer} from 'react';\nconst Reducer1=()=>{\n    const initialState={username:\"\",\n                        email:\"\",\n                        password:\"\"};\n                        \n    const reducer=(state,action)=>{\n        switch(action.type)\n        {\n            case 'handle_input_text':\n                return{\n                    ...state,\n                    [action.field]:action.payload\n                }\n            default:\n                return state;    \n        }\n    }                    \n    const handleTextChange=(e)=>{\n        dispatch({\n            type:\"handle_input_text\",\n            field:e.target.name,\n            payload:e.target.value\n        })\n    }\n    const [state,dispatch]=useReducer(reducer,initialState);\n    \n    return(\n        <div>\n            <hr></hr>\n            <p>This is from Reducer1 Component</p>\n            <form>\n                Username : <input type=\"text\" name=\"username\" value={state.username} onChange={(e)=>handleTextChange(e)}/>{state.username}<br/>\n                Email : <input type=\"text\" name=\"email\" value={state.email} onChange={(e)=>handleTextChange(e)}/>{state.email}<br/>\n                Password : <input type=\"text\" name=\"password\" value={state.password} onChange={(e)=>handleTextChange(e)}/>{state.password}<br/>\n             \n            </form>\n        </div>\n    );\n}\nexport default Reducer1;","import {useState} from 'react';\nconst Reducer2 = ()=>{\n    const [counter,setCounter] =useState(0);\n    const [showdata,setShowdata] =useState(false);\n    const incrementHandler=()=>{\n        setCounter(counter + 1);\n    }\n    const decrementHandler=()=>{\n        setCounter(counter - 1);\n    }\n    const showData=()=>{\n        setShowdata(!showdata);\n    }\n    return(\n        <div>\n            <hr></hr>\n            <p>State practice</p>\n            <div>{counter}</div>\n            <div><button onClick={incrementHandler}>Increment</button></div>\n            <div><button onClick={decrementHandler}>Decrement</button></div>\n            <a href=\"##\" onClick={showData}>Click Link</a>\n            {showdata && <p>Here is my COntact Number:99 99 99 99 99</p>}\n        </div>\n    );\n\n}\nexport default Reducer2;","import { useReducer } from \"react\";\nconst Reducer3=()=>{\n    const initial ={name:\"\",\n                    email:\"\",\n                    password:\"\"};\n    const reducer=(state,action)=>{\n            switch(action.type)\n            {\n                case 'input_text_alter':\n                    return{\n                        ...state,\n                        [action.field]:action.payload\n                    }\n                default:\n                    return state;    \n            }\n    }   \n    const handleTextChange=(e)=>{\n        dispatch({type:'input_text_alter',\n        field:e.target.name,\n        payload:e.target.value\n        })\n    }             \n    const[state,dispatch] = useReducer(reducer,initial);\n    return(\n        <div>\n            <hr>\n            </hr>\n            <p>useReducer Practice</p>\n            <form>\n               <div><input type=\"text\" name=\"username\" value={state.username} onChange={(e)=>handleTextChange(e)}/>{state.username}\n               </div><div><input type=\"email\" name=\"email\" value={state.email} onChange={(e)=>handleTextChange(e)}/>{state.email}\n               </div><div><input type=\"password\" name=\"password\" value={state.password} onChange={(e)=>handleTextChange(e)}/>{state.password}\n               </div></form>\n        </div>\n    );\n}\nexport default Reducer3;","import { useEffect } from \"react\";\nconst Reducer4=()=>{\n    \n    return(\n        <div>\n            <hr></hr>\n            <p>UseEffect Practice</p>\n            \n        </div>\n    );\n}\nexport default Reducer4;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Practice=()=>{\n   \n    \n    return(\n        <div>\n            <hr/>\n            <p>Practice Session</p>\n            \n        </div>\n    );\n}\nexport default Practice;","import React from 'react';\nimport './App.css';\n//import StudentList from './components/StudentList';\n//import Counter from './components/Counter';\n\nimport {useState, useMemo} from 'react';\n// import {useEffect} from 'react';\n\n\nfunction Memos() {\n    const [counter,setCounter] =useState(1);\n    const result = useMemo(()=>{\n      return factorial(counter);\n    },[counter])\n    const [name,setName] = useState(\"\");\n    const incrementHandler =()=>{\n      return setCounter(counter + 1);\n    }\n    const decrementHandler=()=>{\n      return setCounter(counter - 1);\n    }\n  return(\n    <div>\n      <div>\n      <h2>Factorial of{counter} is : {result} </h2>\n      <button onClick={incrementHandler}>Increment</button>\n      <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <hr/>\n      <div>\n        <h2>Enter Name :</h2>\n        <input type=\"text\" value={name} placeholder=\"enter name\" onChange={(e)=>setName(e.target.value)} />\n        <hr/>\n        <DisplayName name={name}></DisplayName>\n    \n      </div>\n    </div>\n  );\n}\nconst DisplayName=React.memo (({name})=>{\n  console.log(\"Rendered\");\n  return <p>My name is: {name}</p>\n   \n  \n});\nfunction factorial(n)\n{\n  \n  let i = 0;\n  while(i < 200000000)\n  {\n    i++;\n  }\n  if(n < 0 )\n  {\n    return -1;\n  }\n  if(n === 0)\n  {\n    return 1;\n  }\n  return n * factorial(n - 1);\n}\nexport default Memos;\n","import React,{Component} from 'react';\nclass Classcomp extends Component\n{\n    render()\n    {\n        return(\n            <div>I am from class component</div>\n        );\n    }\n}   \nexport default Classcomp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Reducer1 from './Reducer1';\nimport Reducer2 from './Reducer2';\nimport Reducer3 from './Reducer3';\nimport Reducer4 from './Reducer4';\nimport reportWebVitals from './reportWebVitals';\nimport Practice from './Practice';\nimport Memos from './Memos';\nimport Classcomp from './Classcomp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n    <Classcomp/>\n     <Reducer1/>\n     <Practice/>\n     <Memos/>\n     <Reducer2/>\n     <Reducer3/>\n     <Reducer4/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}